#include <iostream>
using namespace std;
struct node{
	struct node *child[26];
	bool x;
};
struct node *create(){
	struct node *t=(struct node *)malloc(sizeof(struct node));
	for(int i=0;i<26;i++){
		t->child[i]=NULL;
	}
	t->x=0;
	return t;
};
void insert(struct node *root,string s){
	struct node* t=root;
	for(int i=0;i<s.size();i++){
		if(t->child[s[i]-'a']==NULL){
			t->child[s[i]-'a']=create();
			t=t->child[s[i]-'a'];
		}
		else{
			t=t->child[s[i]-'a'];
		}
	}
	t->x=1;
}
bool search(struct node* root,string s){
	struct node* t=root;
	if(root== NULL) return 0;
	for(int i=0;i<s.size();i++){
		if(t->child[s[i]-'a']==NULL){
			return false;
		}
		else{
			t=t->child[s[i]-'a'];
		}
	}
	return true;
}

int main() {
	// your code goes here
	int n;
	cin>>n;
	string s[n];
	for(int i=0;i<n;i++) cin>>s[i];
	struct node* root=create();
	for(int i=0;i<n;i++) insert(root,s[i]);
	string f;
	cin>>f;
	bool x=search(root,f);
	cout<<x;
	return 0;
}
